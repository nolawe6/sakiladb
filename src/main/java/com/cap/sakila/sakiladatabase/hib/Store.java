package com.cap.sakila.sakiladatabase.hib;
// Generated Apr 22, 2019 8:26:00 AM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Proxy;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Store generated by hbm2java
 */
@Entity
@Table(name = "store", catalog = "sakila", uniqueConstraints = @UniqueConstraint(columnNames = "manager_staff_id"))
@Proxy(lazy=false)
public class Store implements java.io.Serializable {

	private Byte storeId;
	@JsonManagedReference
	private Address address;
	@JsonBackReference
	private Staff staff;
	private Date lastUpdate;
	@JsonBackReference
	private Set<Staff> staffs = new HashSet<Staff>(0);
	@JsonBackReference
	private Set<Inventory> inventories = new HashSet<Inventory>(0);
	@JsonBackReference
	private Set<Customer> customers = new HashSet<Customer>(0);

	public Store() {
	}

	public Store(Address address, Staff staff, Date lastUpdate) {
		this.address = address;
		this.staff = staff;
		this.lastUpdate = lastUpdate;
	}

	public Store(Address address, Staff staff, Date lastUpdate, Set<Staff> staffs, Set<Inventory> inventories,
			Set<Customer> customers) {
		this.address = address;
		this.staff = staff;
		this.lastUpdate = lastUpdate;
		this.staffs = staffs;
		this.inventories = inventories;
		this.customers = customers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "store_id", unique = true, nullable = false)
	public Byte getStoreId() {
		return this.storeId;
	}

	public void setStoreId(Byte storeId) {
		this.storeId = storeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id", nullable = false)
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "manager_staff_id", unique = true, nullable = false)
	public Staff getStaff() {
		return this.staff;
	}

	public void setStaff(Staff staff) {
		this.staff = staff;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update", nullable = false, length = 26)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Staff> getStaffs() {
		return this.staffs;
	}

	public void setStaffs(Set<Staff> staffs) {
		this.staffs = staffs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Inventory> getInventories() {
		return this.inventories;
	}

	public void setInventories(Set<Inventory> inventories) {
		this.inventories = inventories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(Set<Customer> customers) {
		this.customers = customers;
	}

}
